<%- include("partials/header") %>

<style>
	#map {
		height: 90%;
	}
	html,
	body {
		height: 100%;
		margin: 0;
		padding: 0;
	}
</style>

 
<div class="" id="map"></div>
<div class="container" id="loading">
    <div class="row justify-content-center">
        <div class="col-5">
            <h2 class="display-1">Loading...</h2>
        </div>
    </div>
</div>





<script>
	let map

    let gateways_data
    let markers = []

    fetch('/gateway')
        .then(response => response.json())
        .then(gateways => {          

            gateways_data = gateways

            gateways.forEach(gateway => {

                try{
                    let marker = new google.maps.Marker({
                        position: { lat: gateway.location.latitude, lng: gateway.location.longitude },
                        map: map,
                        icon: '/images/antenna.png',
                        scale: 0.1,
                        label: 'test',
                        title: gateway.name
                    })
                    

                    const contentString =
                        '<div id="content">' +
                        '<div id="siteNotice">' +
                        "</div>" +
                        `<h1 id="firstHeading" class="firstHeading">${gateway.name}</h1>` +
                        '<div id="bodyContent">' +
                        `<p>Country code: <b>${gateway.country_code}</b></p>` +
                        `<p>Last seen: ${gateway.last_seen}</p>` +
                        `<a href="/gateway/${gateway._id}" class="btn btn-sm btn-primary">Go to gateway</a>` +
                        "</div>" +
                        "</div>";
                    
                    let infowindow = new google.maps.InfoWindow({
                        content: contentString,
                    })
                    
                    marker.addListener('click', () => {
                        infowindow.open({
                            anchor: marker,
                            map,
                            shouldFocus: false
                        })
                    })
                    marker.setMap(map)
                    markers.push(marker)
                } catch (err) {
                    console.log(err)
                }
            })


        })
        .then(() => {
            document.querySelector('#loading').remove()
        })

    
    let locationInfowindow
	function initMap() {
		map = new google.maps.Map(document.getElementById('map'), {
			center: { lat: 42, lng: 21.456 },
			zoom: 10
		})
    

        locationInfowindow = new google.maps.InfoWindow();

        const locationButton = document.createElement("button");
        locationButton.classList.add('btn')
        locationButton.classList.add('btn-primary')

        locationButton.textContent = "Pan to Current Location";
        locationButton.classList.add("custom-map-control-button");
        map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);
        locationButton.addEventListener("click", () => {
            // Try HTML5 geolocation.
            if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(
                (position) => {
                const pos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude,
                };

                locationInfowindow.setPosition(pos);
                locationInfowindow.setContent("Location found.");
                locationInfowindow.open(map);
                map.setCenter(pos);
                },
                () => {
                handleLocationError(true, locationInfowindow, map.getCenter());
                }
            );
            } else {
            // Browser doesn't support Geolocation
            handleLocationError(false, locationInfowindow, map.getCenter());
            }
        });
	}

    function handleLocationError(browserHasGeolocation, locationInfowindow, pos) {
        locationInfowindow.setPosition(pos);
        locationInfowindow.setContent(
            browserHasGeolocation
            ? "Error: The Geolocation service failed."
            : "Error: Your browser doesn't support geolocation."
        );
        locationInfowindow.open(map);
    }
</script>


<script async
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAMraH0dFJoaQ2yJMW7R3cdAYXFpjDAaXc&callback=initMap">
</script>


<%- include("partials/footer") %>
